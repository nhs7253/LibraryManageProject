<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.library.dao.config.mapper.WaitListMapper">

	<sql id="all-column">
		book_id,
		wait_user,
		wait_ranking	
	</sql>
	
	<resultMap type="waitlist" id="waitlist-resultmap">
		<id column="book_id" property="bookId"/>
		<id column="wait_user" property="waitUser"/>
		<result column="wait_ranking" property="waitRanking"/>
	</resultMap>
	
	
	<resultMap type="waitlist" id="waitlist-book-userManagement-resultmap" extends="waitlist-resultmap">
		<association property="book" resultMap="kr.co.library.dao.config.mapper.bookMapper.book-resultmap"/>
		<association property="userManagement" resultMap="kr.co.library.dao.config.mapper.UserManagementMapper.user-resultmap"/>
	</resultMap>
	
	<resultMap type="map" id="waitRank-resultmap">
		<result javaType="string" column="title" property="title"/>
		<result javaType="string" column="rank" property="rank"/>
		<result javaType="string" column="bookId" property="bookId"/>
	</resultMap>
	
	<resultMap type="map" id="admin-waitRank-resultmap">
		<result javaType="string" column="userId" property="userId"/>
		<result javaType="string" column="name" property="name"/>
		<result javaType="string" column="bookId" property="bookId"/>
		<result javaType="string" column="title" property="title"/>
		<result javaType="string" column="rank" property="rank"/>

	</resultMap>
	
	
	<insert id="insertWaitList" parameterType="waitList">
		<selectKey resultType="int" keyProperty="waitRanking" order="BEFORE">
	         SELECT wait_ranking_seq.nextval FROM dual
		</selectKey>
		INSERT INTO wait_list
	    VALUES (#{bookId},
				#{waitUser},
				#{waitRanking})	
	</insert>
	
	<update id="updateWaitList" parameterType="WaitList">
		UPDATE wait_list
		SET wait_ranking = #{waitRanking}
		WHERE book_id = #{bookId} AND wait_user = #{waitUser}
	</update>

	<delete id="deleteWaitList" parameterType="map">
		DELETE FROM wait_list
		WHERE book_id = #{bookId} AND wait_user = #{waitUser}
	</delete>
	
	<select id="selectWaitList" resultMap="waitlist-resultmap">
		SELECT <include refid="all-column"/>
		FROM wait_list
		ORDER BY wait_ranking
	</select>
	
	<select id="selectWaitListByBookId" parameterType="string" resultMap="waitlist-resultmap">
		SELECT <include refid="all-column"/>
		FROM wait_list
		WHERE book_id = #{value}
		ORDER BY wait_ranking 
	</select>
	
	<select id="selectWaitListByWaitRanking" parameterType="_int" resultMap="waitlist-resultmap">
		SELECT <include refid="all-column"/>
		FROM wait_list
		WHERE wait_ranking = #{value}
		ORDER BY wait_ranking 
	</select>
	
	<select id="selectWaitListByWaitUser" parameterType="string" resultMap="waitlist-resultmap">
		SELECT <include refid="all-column"/>
		FROM wait_list
		WHERE wait_user = #{value}
		ORDER BY wait_ranking
	</select>
	
	<select id="selectByWaitUserIdAndByBookId" parameterType="map" resultMap="waitlist-resultmap">
		SELECT <include refid="all-column"/>
		FROM wait_list
		WHERE wait_user = #{waitUser} AND book_id = #{bookId}
	</select>
	
	<select id="selectWaitListByBookCount" resultType="int">
		SELECT COUNT(*)
		FROM wait_list
		WHERE book_id = #{bookId}
	</select>
	
	<select id="selectWaitListByUserCount" resultType="int">
		SELECT COUNT(*)
		FROM wait_list
		WHERE wait_user = #{waitUser}
	</select>
	
	<select id="selectWaitListJoinBookJoinUser" resultMap="waitlist-book-userManagement-resultmap">
		SELECT w.book_id, w.wait_user, w.wait_ranking,
	   		   b.book_id, b.title, b.author, b.publisher, b.publish_date, b.rental_state,
	    	   u.user_id, u.password, u.user_name, u.phone_num, u.email, u.penalty_state
		FROM wait_list w, book b, user_management u
		WHERE w.book_id = b.book_id(+) AND w.wait_user = u.user_id(+)
	</select>
	
	<select id="selectWaitListJoinBookJoinUserByBookId" parameterType="string" resultMap="waitlist-book-userManagement-resultmap">
		SELECT w.book_id, w.wait_user, w.wait_ranking,
	   		   b.book_id, b.title, b.author, b.publisher, b.publish_date, b.rental_state,
	    	   u.user_id, u.password, u.user_name, u.phone_num, u.email, u.penalty_state
		FROM wait_list w, book b, user_management u
		WHERE w.book_id = b.book_id(+) AND w.wait_user = u.user_id(+)
		AND w.book_id = #{value}
	</select>
	
	<select id="selectWaitListJoinBookJoinUserByUserId" parameterType="string" resultMap="waitlist-book-userManagement-resultmap">
		SELECT w.book_id, w.wait_user, w.wait_ranking,
	   		   b.book_id, b.title, b.author, b.publisher, b.publish_date, b.rental_state,
	    	   u.user_id, u.password, u.user_name, u.phone_num, u.email, u.penalty_state
		FROM wait_list w, book b, user_management u
		WHERE w.book_id = b.book_id(+) AND w.wait_user = u.user_id(+)
		AND w.wait_user = #{value}
	</select>
	
	<select id="selectWaitListPagingJoinBookJoinUserByUserId" parameterType="map" resultMap="waitRank-resultmap">	
			SELECT title, rank, bookId
			FROM(
				SELECT b_title title, w_rk rank, rownum rnum, w_book_id bookId
				FROM(
						SELECT b.title b_title,  w.rk w_rk, w.book_id w_book_id
						FROM (
							SELECT book_id, wait_user,
							RANK() OVER (PARTITION BY book_id ORDER BY wait_ranking ) as rk 
							FROM wait_list) w, book b
						WHERE w.book_id = b.book_id(+) AND wait_user = #{userId}
						ORDER BY b.title
				)
				WHERE rownum &lt;= #{endIndex}
			)
			WHERE rnum >= #{startIndex}
	</select>
	
	<select id="selectWaitListPagingJoinBookJoinUser" parameterType="map" resultMap="admin-waitRank-resultmap">	
			SELECT userId, name, bookId, title, rank
			FROM(
				SELECT b_book_id bookId, b_title title, w_rk rank, w_wait_user userId, rownum rnum, u_user_name name
				FROM(
						SELECT b.book_id b_book_id, b.title b_title, w.wait_user w_wait_user, w.rk w_rk, u.user_name u_user_name
						FROM (
							SELECT book_id, wait_user,
							RANK() OVER (PARTITION BY book_id ORDER BY wait_ranking ) as rk 
							FROM wait_list) w, book b, user_management u
						WHERE w.book_id = b.book_id(+) AND  w.wait_user = u.user_id(+)
						ORDER BY b.title
				)
				WHERE rownum &lt;= #{endIndex}
			)
			WHERE rnum >= #{startIndex}
	</select>
	
	
	
	
	<select id="selectWaitListCount" resultType="int">
		SELECT COUNT(*)
		FROM wait_list
	</select>
	
</mapper>

	